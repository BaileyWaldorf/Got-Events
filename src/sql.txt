set foreign_key_checks=0;

CREATE TABLE user (
    username CHAR(30) NOT NULL,
    password CHAR(30) NOT NULL,
    university CHAR(100) NOT NULL,
    PRIMARY KEY(username),
    FOREIGN KEY(university) REFERENCES universities(name)
);

CREATE TABLE admins (
    username CHAR(30) NOT NULL,
    rso_id INT,
    FOREIGN KEY(username) REFERENCES user(username),
    FOREIGN KEY(rso_id) REFERENCES rsos(rso_id)
);

CREATE TABLE superadmins (
    username CHAR(30) NOT NULL,
    university CHAR(100) NOT NULL,
    FOREIGN KEY(username) REFERENCES user(username),
    FOREIGN KEY(university) REFERENCES universities(name)
);


CREATE TABLE universities (
    name CHAR(100) NOT NULL,
    location CHAR(200) NOT NULL,
    description CHAR(255),
    num_of_students INT NOT NULL,
    pictures CHAR(200),
    PRIMARY KEY (name)
);

CREATE TABLE rsos (
    rso_id INT AUTO_INCREMENT,
    name CHAR(50),
    description CHAR(200),
    admin CHAR(30) NOT NULL,
    PRIMARY KEY(rso_id),
    FOREIGN KEY(admin) REFERENCES admin(username)
);

CREATE TABLE events (
    id INT NOT NULL AUTO_INCREMENT,
    name CHAR(50),
    category INT,
    description CHAR(200),
    time DATETIME NOT NULL,
    location CHAR(200) NOT NULL,
    contact_num CHAR(10),
    contact_email CHAR(100),
    rating INT,
    university_name CHAR(100) NOT NULL,
    private BOOLEAN,
    rso_id INT,
    PRIMARY KEY (id),
    FOREIGN KEY(rso_id) REFERENCES rsos(rso_id),
    FOREIGN KEY(university_name) REFERENCES universities(name)
);

CREATE TABLE comments (
    username CHAR(30) NOT NULL,
    comment CHAR(255) NOT NULL,
    event INT NOT NULL,
    FOREIGN KEY(username) REFERENCES user(username),
    FOREIGN KEY(event) REFERENCES events(id)
);
